# Generated by Django 5.2.5 on 2025-09-12 09:46

import django.db.models.deletion
import market.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('market', '0007_remove_banner_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReferralAttribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_id', models.CharField(max_length=100)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_earned', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('locked_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('available_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_paid_out', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=market.models.generate_referral_code, max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('total_clicks', models.PositiveIntegerField(default=0)),
                ('total_conversions', models.PositiveIntegerField(default=0)),
                ('total_rewards', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralPayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('BANK_TRANSFER', 'Банковский перевод'), ('PAYPAL', 'PayPal'), ('CRYPTO', 'Криптовалюта'), ('CASH', 'Наличные')], max_length=20)),
                ('payment_details', models.JSONField()),
                ('status', models.CharField(choices=[('PENDING', 'Ожидает обработки'), ('PROCESSING', 'Обрабатывается'), ('COMPLETED', 'Завершено'), ('REJECTED', 'Отклонено')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Default Referral Program', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('min_payout_amount', models.DecimalField(decimal_places=2, default=50.0, max_digits=10)),
                ('attribution_window_days', models.PositiveIntegerField(default=30)),
                ('reward_percentage', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('max_reward_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reward_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('reward_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('locked_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('available_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Ожидает подтверждения'), ('APPROVED', 'Одобрено'), ('REVERSED', 'Отменено'), ('PAID_OUT', 'Выплачено')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('reversed_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('fraud_score', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_id', models.CharField(max_length=100)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('utm_source', models.CharField(blank=True, max_length=100, null=True)),
                ('utm_medium', models.CharField(blank=True, max_length=100, null=True)),
                ('utm_campaign', models.CharField(blank=True, max_length=100, null=True)),
                ('visited_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='review',
            name='product',
        ),
        migrations.RemoveField(
            model_name='review',
            name='user',
        ),
        migrations.DeleteModel(
            name='UserRole',
        ),
        migrations.AlterModelOptions(
            name='category',
            options={},
        ),
        migrations.AlterModelOptions(
            name='product',
            options={},
        ),
        migrations.AlterModelOptions(
            name='productimage',
            options={'ordering': ['sort_order']},
        ),
        migrations.RemoveField(
            model_name='product',
            name='stock',
        ),
        migrations.RemoveField(
            model_name='user',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='withdrawalrequest',
            name='notes',
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='market.user'),
        ),
        migrations.AlterField(
            model_name='order',
            name='payment_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='market.category'),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='product',
            name='price_uzs',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='market.user'),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='image',
            field=models.ImageField(upload_to='products/'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='market_user_set', related_query_name='market_user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='referral_code',
            field=models.CharField(blank=True, max_length=20, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='referred_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='market.user'),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('superadmin', 'Super Admin'), ('vendor', 'Vendor'), ('ops', 'Operations'), ('customer', 'Customer')], default='customer', max_length=20),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='market_user_set', related_query_name='market_user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='withdrawalrequest',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_withdrawals', to='market.user'),
        ),
        migrations.AlterField(
            model_name='withdrawalrequest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_requests', to='market.user'),
        ),
        migrations.AddField(
            model_name='referralattribution',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.product'),
        ),
        migrations.AddField(
            model_name='referralattribution',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='market.user'),
        ),
        migrations.AddField(
            model_name='referralbalance',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referral_balance', to='market.user'),
        ),
        migrations.AddField(
            model_name='referrallink',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.product'),
        ),
        migrations.AddField(
            model_name='referrallink',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_links', to='market.user'),
        ),
        migrations.AddField(
            model_name='referralattribution',
            name='referral_link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributions', to='market.referrallink'),
        ),
        migrations.AddField(
            model_name='referralpayout',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payouts', to='market.user'),
        ),
        migrations.AddField(
            model_name='referralpayout',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_payouts', to='market.user'),
        ),
        migrations.AddField(
            model_name='referralreward',
            name='attributed_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_rewards', to='market.user'),
        ),
        migrations.AddField(
            model_name='referralreward',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_rewards', to='market.order'),
        ),
        migrations.AddField(
            model_name='referralreward',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.product'),
        ),
        migrations.AddField(
            model_name='referralreward',
            name='referral_link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='market.referrallink'),
        ),
        migrations.AddField(
            model_name='referralpayout',
            name='rewards',
            field=models.ManyToManyField(related_name='payouts', to='market.referralreward'),
        ),
        migrations.AddField(
            model_name='referralvisit',
            name='referral_link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='market.referrallink'),
        ),
        migrations.AddField(
            model_name='referralvisit',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='market.user'),
        ),
        migrations.AddField(
            model_name='referralattribution',
            name='last_visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.referralvisit'),
        ),
        migrations.DeleteModel(
            name='Review',
        ),
        migrations.AlterUniqueTogether(
            name='referrallink',
            unique_together={('user', 'product')},
        ),
        migrations.AddIndex(
            model_name='referralreward',
            index=models.Index(fields=['attributed_user'], name='market_refe_attribu_50d701_idx'),
        ),
        migrations.AddIndex(
            model_name='referralreward',
            index=models.Index(fields=['status'], name='market_refe_status_11a4e8_idx'),
        ),
        migrations.AddIndex(
            model_name='referralreward',
            index=models.Index(fields=['created_at'], name='market_refe_created_100dcd_idx'),
        ),
        migrations.AddIndex(
            model_name='referralvisit',
            index=models.Index(fields=['anonymous_id'], name='market_refe_anonymo_b42b27_idx'),
        ),
        migrations.AddIndex(
            model_name='referralvisit',
            index=models.Index(fields=['referral_link'], name='market_refe_referra_7c2414_idx'),
        ),
        migrations.AddIndex(
            model_name='referralvisit',
            index=models.Index(fields=['visited_at'], name='market_refe_visited_d54603_idx'),
        ),
        migrations.AddIndex(
            model_name='referralattribution',
            index=models.Index(fields=['anonymous_id'], name='market_refe_anonymo_b11edb_idx'),
        ),
        migrations.AddIndex(
            model_name='referralattribution',
            index=models.Index(fields=['user'], name='market_refe_user_id_40336e_idx'),
        ),
        migrations.AddIndex(
            model_name='referralattribution',
            index=models.Index(fields=['expires_at'], name='market_refe_expires_de6d17_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='referralattribution',
            unique_together={('anonymous_id', 'product')},
        ),
    ]
